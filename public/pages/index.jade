extends ../templates/page.jade

block append head:title
  title. spun - Rapid Selenium spec authoring

block append body:content
  .centered-text
    img(src="/images/logo.png" class="logo" alt="spun for rapid selenium spec authoring")
    //-
      .spinning-logo
        img(src="/images/record-full.png", class="record full")
        img(src="/images/record-partial.png", class="record partial")

    h1. Rapid Selenium spec authoring

    .spun-example
      .line
        span.command. get
        span.string-arg. "http://google.com"
      .line
        span.command. find
        span.string-arg. "[name=q]"
      .line
        span.command. type
        span.string-arg. "spun authoring"
      .line
        span.command. submit
      .line
        span.command. find
        span.string-arg. "#search li h3"
      .line
        span.command. assert
        span.string-arg. "spun"
        span.operator. &nbsp;in
        span.string-arg. text
      .line
        span.command. quit

    p.
      Spun's goal is to make writing selenium specs easy and intuitive.
      Anyone in your organization can learn to write spun specs.  If
      you've viewed the example above then you almost know enough to
      figure the rest out.

    h3. Universal
    p.
      One of Selenium's downfalls is the number of bindings out
      there for various programming languages.  Not only are there bindings
      for several languages, there are multiple variations of each binding
      for different coding preferences.  This makes it harder for larger
      groups of developers and QA to agree on a solution.

      spun is a universal selenium DSL (Domain Specific Language) that
      compiles down to any programming language of choice.  Spun utilizes
      provider modules that handle outputting actual code.  Because of this
      you can run compiled spun files in any language of choice so long as
      there is a provider written to do the compilation.

    h3. Intuitive
    p.
      Spun favors declaration over imperative programming.  This makes it
      easier to learn and understand for anyone with a non-technical
      background.

      Spun understands the commands you need to verify that your site is
      working correctly.

    h3. Maintainable
    p.
      The traditional approach to maintaining large selenium projects is
      to create page objects.  Page objects add complication, and prevent
      non-technical people from authoring specs.
